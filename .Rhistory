# Aplicar a função à matriz C
resultado_C <- varredura_matriz(matriz_C)
# Calcular o maior elemento em módulo da matriz C transformada
maior_elemento_modulo_C_transformada <- max(abs(resultado_C$matriz_transformada))
print("Maior Elemento em Módulo da Matriz C Transformada:")
print(maior_elemento_modulo_C_transformada)
# Aplicar a função à matriz C
resultado_C <- varredura_matriz(matriz_C)
# Calcular o maior elemento em módulo da matriz C transformada
maior_C<- max(abs(resultado_C$matriz_transformada))
cat("Maior Elemento em Módulo da Matriz C Transformada:", maior_C)
# Aplicar a função à matriz B
resultado_B <- varredura_matriz(matriz_B)
# Calcular a soma dos elementos da coluna 2 da matriz B transformada
soma_coluna2_B_transformada <- sum(resultado_B$matriz_transformada[, 2])
print("Soma dos Elementos da Coluna 2 da Matriz B Transformada:")
print(soma_coluna2_B_transformada)
# Aplicar a função à matriz B
resultado_B <- varredura_matriz(matriz_B)
# Calcular a soma dos elementos da coluna 2 da matriz B transformada
soma_col2_B <- sum(resultado_B$matriz_transformada[, 2])
cat("Soma dos Elementos da Coluna 2 da Matriz B Transformada:", round(soma_col2_B,2))
# Aplicar a função à matriz B
resultado_B <- varredura_matriz(matriz_B)
# Calcular a soma dos elementos da coluna 2 da matriz B transformada
soma_col2_B <- sum(resultado_B$matriz_transformada[, 2])
cat("Soma dos Elementos da Coluna 2 da Matriz B Transformada:", round(soma_col2_B,0))
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table(".\avaliação_02-datasets\Astrologia_Individuo.txt", header = TRUE)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE)
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE)
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
numero_base <- sum(as.numeric(strsplit(as.character(data_nascimento), "")[[1]]))
while (numero_base >= 10) {
numero_base <- sum(as.numeric(strsplit(as.character(numero_base), "")[[1]]))
}
return(numero_base)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
X <- calcular_numero_base(data_nascimento)
Ni <- calcular_numero_base(X^4 + 7 * X + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Aplicar as funções aos dados
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE)
View(dados_individuo)
View(dados_casal)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE)
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE)
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
numero_base <- sum(as.numeric(strsplit(as.character(data_nascimento), "")[[1]]))
while (numero_base >= 10) {
numero_base <- sum(as.numeric(strsplit(as.character(numero_base), "")[[1]]))
}
return(numero_base)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
X <- calcular_numero_base(data_nascimento)
Ni <- calcular_numero_base(X^4 + 7 * X + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Aplicar as funções aos dados
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
numero_base <- sum(as.numeric(strsplit(as.character(data_nascimento), "")[[1]]))
while (numero_base >= 10) {
numero_base <- sum(as.numeric(strsplit(as.character(numero_base), "")[[1]]))
}
return(numero_base)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
X <- calcular_numero_base(data_nascimento)
Ni <- calcular_numero_base(X^4 + 7 * X + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Aplicar as funções aos dados
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
View(dados_casal)
View(dados_individuo)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
if (!is.na(data_nascimento)) {
numero_base <- sum(as.numeric(strsplit(as.character(data_nascimento), "")[[1]]))
while (numero_base >= 10) {
numero_base <- sum(as.numeric(strsplit(as.character(numero_base), "")[[1]]))
}
return(numero_base)
} else {
return(NA)
}
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
X <- calcular_numero_base(data_nascimento)
Ni <- calcular_numero_base(X^4 + 7 * X + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Adicionar coluna de numerologia individual
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
# Converter os caracteres para números
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
# Verificar se há valores NA
if (any(is.na(numeros))) {
return(NA)
}
numero_base <- sum(numeros)
# Loop para reduzir a soma para um dígito
while (numero_base >= 10) {
numeros <- as.numeric(strsplit(as.character(numero_base), "")[[1]])
numero_base <- sum(numeros)
}
return(numero_base)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
X <- calcular_numero_base(data_nascimento)
Ni <- calcular_numero_base(X^4 + 7 * X + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Adicionar coluna de numerologia individual
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Adicionar coluna de numerologia para casal
dados_casal$Numerologia_Casal <- mapply(numerologia_casal, dados_casal$Data_Nascimento_1, dados_casal$Data_Nascimento_2)
# Exibir os resultados
cat("Numerologia Individual:\n")
print(head(dados_individuo))
cat("\nNumerologia para Casal:\n")
print(head(dados_casal))
head(dados_casal)
# Carregar o pacote lubridate
library(lubridate)
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Converter as datas para o formato Date
dados_casal$Data_Nascimento_1 <- dmy(dados_casal$Data_Nascimento_1)
dados_casal$Data_Nascimento_2 <- dmy(dados_casal$Data_Nascimento_2)
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
if (any(is.na(numeros))) {
return(NA)
}
numero_base <- sum(numeros)
while (numero_base >= 10) {
numeros <- as.numeric(strsplit(as.character(numero_base), "")[[1]])
numero_base <- sum(numeros)
}
return(numero_base)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Adicionar coluna de numerologia para casal
dados_casal$Numerologia_Casal <- mapply(numerologia_casal, dados_casal$Data_Nascimento_1, dados_casal$Data_Nascimento_2)
# Exibir os resultados
cat("Numerologia para Casal:\n")
print(dados_casal)
head(dados_casal)
# Carregar o pacote lubridate
library(lubridate)
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Converter as datas para o formato Date
dados_casal$Data_Nascimento_1 <- dmy(dados_casal$Data_Nascimento_1)
dados_casal$Data_Nascimento_2 <- dmy(dados_casal$Data_Nascimento_2)
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
if (any(is.na(numeros))) {
return(NA)
}
numero_base <- sum(numeros)
while (numero_base >= 10) {
numeros <- as.numeric(strsplit(as.character(numero_base), "")[[1]])
numero_base <- sum(numeros)
}
return(numero_base)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
X <- calcular_numero_base(data_nascimento_1)
Y <- calcular_numero_base(data_nascimento_2)
# Adicionando verificação para evitar NA nos cálculos
if (is.na(X) | is.na(Y)) {
return(NA)
}
Nc <- calcular_numero_base(X^2 + Y^7)
return(Nc)
}
# Adicionar coluna de numerologia para casal
dados_casal$Numerologia_Casal <- mapply(numerologia_casal, dados_casal$Data_Nascimento_1, dados_casal$Data_Nascimento_2)
# Exibir os resultados
cat("Numerologia para Casal:\n")
print(dados_casal)
# Carregar o pacote lubridate
library(lubridate)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Converter as datas para o formato Date
dados_individuo$Data_Nascimento <- dmy(dados_individuo$Data_Nascimento)
# Função para calcular o número base a partir de uma data de nascimento
calcular_numero_base <- function(data_nascimento) {
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
if (any(is.na(numeros))) {
return(NA)
}
numero_base <- sum(numeros)
while (numero_base >= 10) {
numeros <- as.numeric(strsplit(as.character(numero_base), "")[[1]])
numero_base <- sum(numeros)
}
return(numero_base)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
X <- calcular_numero_base(data_nascimento)
Ni <- calcular_numero_base(X^4 + 7 * X + 2)
return(Ni)
}
# Adicionar coluna de numerologia individual
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Exibir os resultados
cat("Numerologia Individual:\n")
print(dados_individuo)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Função para extrair apenas os números de uma data de nascimento
extrair_numeros_data <- function(data_nascimento) {
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
return(sum(numeros, na.rm = TRUE))
}
# Aplicar a função aos dados dos indivíduos
dados_individuo$Numeros_Data <- sapply(dados_individuo$Data_Nascimento, extrair_numeros_data)
# Aplicar a função aos dados dos casais
dados_casal$Numeros_Data_1 <- sapply(dados_casal$Data_Nascimento_1, extrair_numeros_data)
dados_casal$Numeros_Data_2 <- sapply(dados_casal$Data_Nascimento_2, extrair_numeros_data)
# Exibir os resultados
cat("Numeros dos Indivíduos:\n")
print(dados_individuo)
cat("Numeros dos Casais:\n")
print(dados_casal)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Função para extrair apenas os números de uma data de nascimento
extrair_numeros_data <- function(data_nascimento) {
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
return(sum(numeros, na.rm = TRUE))
}
# Aplicar a função aos dados dos indivíduos
dados_individuo$Numeros_Data <- sapply(dados_individuo$Data_Nascimento, extrair_numeros_data)
# Aplicar a função aos dados dos casais
dados_casal$Numeros_Data_1 <- sapply(dados_casal$Data_Nascimento_1, extrair_numeros_data)
dados_casal$Numeros_Data_2 <- sapply(dados_casal$Data_Nascimento_2, extrair_numeros_data)
# Exibir os resultados
cat("Numeros dos Indivíduos:\n")
print(dados_individuo)
cat("Numeros dos Casais:\n")
print(dados_casal)
# Criar uma nova coluna que soma cada número individualmente
dados_individuo$Soma_Numeros <- rowSums(dados_individuo[, "Numeros_Data", drop = FALSE], na.rm = TRUE)
dados_casal$Soma_Numeros_1 <- rowSums(dados_casal[, "Numeros_Data_1", drop = FALSE], na.rm = TRUE)
dados_casal$Soma_Numeros_2 <- rowSums(dados_casal[, "Numeros_Data_2", drop = FALSE], na.rm = TRUE)
# Exibir os resultados
cat("Soma dos Números dos Indivíduos:\n")
print(dados_individuo)
cat("Soma dos Números dos Casais:\n")
print(dados_casal)
# Criar uma nova coluna que soma cada número individualmente
dados_individuo$Soma_Numeros <- rowSums(dados_individuo[, "Numeros_Data", drop = FALSE], na.rm = TRUE)
dados_casal$Soma_Numeros_1 <- rowSums(dados_casal[, "Numeros_Data_1", drop = FALSE], na.rm = TRUE)
dados_casal$Soma_Numeros_2 <- rowSums(dados_casal[, "Numeros_Data_2", drop = FALSE], na.rm = TRUE)
# Exibir os resultados
cat("Soma dos Números dos Indivíduos:\n")
print(dados_individuo)
cat("Soma dos Números dos Casais:\n")
print(dados_casal)
# Função para somar os dígitos individualmente
somar_digitos <- function(numero) {
digitos <- as.numeric(strsplit(as.character(numero), "")[[1]])
return(sum(digitos, na.rm = TRUE))
}
# Aplicar a função aos dados dos indivíduos
dados_individuo$Soma_Numeros <- sapply(dados_individuo$Numeros_Data, somar_digitos)
# Aplicar a função aos dados dos casais
dados_casal$Soma_Numeros_1 <- sapply(dados_casal$Numeros_Data_1, somar_digitos)
dados_casal$Soma_Numeros_2 <- sapply(dados_casal$Numeros_Data_2, somar_digitos)
# Exibir os resultados
cat("Soma dos Dígitos dos Indivíduos:\n")
print(dados_individuo)
cat("Soma dos Dígitos dos Casais:\n")
print(dados_casal)
# Função para calcular o número base a partir de uma soma de números
calcular_numero_base <- function(soma_numeros) {
while (soma_numeros >= 10) {
soma_numeros <- sum(as.numeric(strsplit(as.character(soma_numeros), "")[[1]]))
}
return(soma_numeros)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
soma_numeros <- extrair_numeros_data(data_nascimento)
numero_base <- calcular_numero_base(soma_numeros)
Ni <- calcular_numero_base(numero_base^4 + 7 * numero_base + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
soma_numeros_1 <- extrair_numeros_data(data_nascimento_1)
soma_numeros_2 <- extrair_numeros_data(data_nascimento_2)
numero_base_1 <- calcular_numero_base(soma_numeros_1)
numero_base_2 <- calcular_numero_base(soma_numeros_2)
Nc <- calcular_numero_base(numero_base_1^2 + numero_base_2^7)
return(Nc)
}
# Adicionar coluna de numerologia individual
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Adicionar coluna de numerologia para casal
dados_casal$Numerologia_Casal <- mapply(numerologia_casal, dados_casal$Data_Nascimento_1, dados_casal$Data_Nascimento_2)
# Exibir os resultados
cat("Numerologia Individual:\n")
print(dados_individuo)
cat("Numerologia para Casal:\n")
print(dados_casal)
# Carregar dados de aniversários dos indivíduos
dados_individuo <- read.table("./avaliação_02-datasets/Astrologia_Individuo.txt", header = FALSE, col.names = c("Data_Nascimento"))
# Carregar dados de aniversários dos casais
dados_casal <- read.table("./avaliação_02-datasets/Astrologia_Casal.txt", header = FALSE, col.names = c("Data_Nascimento_1", "Data_Nascimento_2"))
# Função para extrair apenas os números de uma data de nascimento
extrair_numeros_data <- function(data_nascimento) {
numeros <- as.numeric(strsplit(as.character(data_nascimento), "")[[1]])
return(sum(numeros, na.rm = TRUE))
}
# Função para somar os dígitos individualmente
somar_digitos <- function(numero) {
digitos <- as.numeric(strsplit(as.character(numero), "")[[1]])
return(sum(digitos, na.rm = TRUE))
}
# Função para calcular o número base a partir de uma soma de números
calcular_numero_base <- function(soma_numeros) {
while (soma_numeros >= 10) {
soma_numeros <- sum(as.numeric(strsplit(as.character(soma_numeros), "")[[1]]))
}
return(soma_numeros)
}
# Função para calcular a numerologia individual
numerologia_individual <- function(data_nascimento) {
soma_numeros <- extrair_numeros_data(data_nascimento)
numero_base <- calcular_numero_base(soma_numeros)
Ni <- calcular_numero_base(numero_base^4 + 7 * numero_base + 2)
return(Ni)
}
# Função para calcular a numerologia de casal
numerologia_casal <- function(data_nascimento_1, data_nascimento_2) {
soma_numeros_1 <- extrair_numeros_data(data_nascimento_1)
soma_numeros_2 <- extrair_numeros_data(data_nascimento_2)
numero_base_1 <- calcular_numero_base(soma_numeros_1)
numero_base_2 <- calcular_numero_base(soma_numeros_2)
Nc <- calcular_numero_base(numero_base_1^2 + numero_base_2^7)
return(Nc)
}
# Aplicar a função aos dados dos indivíduos
dados_individuo$Numeros_Data <- sapply(dados_individuo$Data_Nascimento, extrair_numeros_data)
dados_individuo$Soma_Numeros <- sapply(dados_individuo$Numeros_Data, somar_digitos)
dados_individuo$Numerologia_Individual <- sapply(dados_individuo$Data_Nascimento, numerologia_individual)
# Aplicar a função aos dados dos casais
dados_casal$Numeros_Data_1 <- sapply(dados_casal$Data_Nascimento_1, extrair_numeros_data)
dados_casal$Numeros_Data_2 <- sapply(dados_casal$Data_Nascimento_2, extrair_numeros_data)
dados_casal$Soma_Numeros_1 <- sapply(dados_casal$Numeros_Data_1, somar_digitos)
dados_casal$Soma_Numeros_2 <- sapply(dados_casal$Numeros_Data_2, somar_digitos)
dados_casal$Numerologia_Casal <- mapply(numerologia_casal, dados_casal$Data_Nascimento_1, dados_casal$Data_Nascimento_2)
# Contar casais com Número Base 6 na Numerologia para Casal
casais_numero_base_6 <- sum(dados_casal$Numerologia_Casal == 6, na.rm = TRUE)
# Exibir o resultado
cat("Número de casais com Número Base 6 na Numerologia para Casal:", casais_numero_base_6, "\n")
# Contar casais com Número Base 6 na Numerologia para Casal
casais_numero_base_6 <- sum(dados_casal$Numerologia_Casal == 6, na.rm = TRUE)
# Contar casais com Número Base 6
casais_numero_base_6 <- sum(dados_casal$Numeros_Data_1 == 6 & dados_casal$Numeros_Data_2 == 6, na.rm = TRUE)
# Exibir os resultados
cat("Número de casais com Número Base 6:", casais_numero_base_6, "\n")
cat("Número de casais com Numerologia para Casal igual a 6:", casais_numerologia_6, "\n")
# Contar casais com Número Base 6 na Numerologia para Casal
casais_numero_base_6 <- sum(dados_casal$Numerologia_Casal == 6, na.rm = TRUE)
# Contar casais com Número Base 6
casais_numero_base_6 <- sum(dados_casal$Numeros_Data_1 == 6 & dados_casal$Numeros_Data_2 == 6, na.rm = TRUE)
# Exibir os resultados
cat("Número de casais com Número Base 6:", casais_numero_base_6, "\n")
cat("Número de casais com Numerologia para Casal igual a 6:", casais_numerologia_6, "\n")
# Contar casais com Número Base 6 na Numerologia para Casal
casais_numero_base_6 <- sum(dados_casal$Numerologia_Casal == 6, na.rm = TRUE)
# Exibir o resultado
cat("Número de casais com Número Base 6 na Numerologia para Casal:", casais_numero_base_6, "\n")
q3a1 <- sum(dados_casal$Soma_Numeros_1 == 6, na.rm = TRUE)
q3a2 <- sum(dados_casal$Soma_Numeros_2 == 6, na.rm = TRUE)
# Contar casais com Número Base 6 na Numerologia para Casal
casais_numero_base_6 <- sum(dados_casal$Numerologia_Casal == 6, na.rm = TRUE)
# Exibir o resultado
cat("Existem ", q3a1 + q3a2, "casais com Número Base 6, e ", casais_numero_base_6, "casais com essa Numerologia para Casal.")
# Função para calcular a numerologia do indivíduo
numerologia_do_individuo <- function(data_nascimento) {
soma_numeros <- extrair_numeros_data(data_nascimento)
numero_base <- calcular_numero_base(soma_numeros)
Ni <- calcular_numero_base(numero_base^4 + 7 * numero_base + 2)
return(Ni)
}
# Calcular a numerologia do indivíduo
numerologia_individual_exemplo <- numerologia_do_individuo("13/10/2008")
# Exibir o resultado
cat("Numerologia do Indivíduo:", numerologia_individual_exemplo, "\n")
# Função para calcular a numerologia do indivíduo
numerologia_do_individuo <- function(data_nascimento) {
soma_numeros <- extrair_numeros_data(data_nascimento)
numero_base <- calcular_numero_base(soma_numeros)
Ni <- calcular_numero_base(numero_base^4 + 7 * numero_base + 2)
return(Ni)
}
# Calcular a numerologia do indivíduo
numerologia_individual_exemplo <- numerologia_do_individuo("1/9/1993")
# Exibir o resultado
cat("Numerologia do Indivíduo:", numerologia_individual_exemplo, "\n")
q3d <- sum(dados_individuo$Soma_Numeros == 7, na.rm = TRUE)
# Contar casais com Número Base 6 na Numerologia para Casal
q3d2 <- sum(dados_individuo$Numerologia_Individual == 7, na.rm = TRUE)
# Exibir o resultado
cat("Existem ", q3d, "indivíduos com o Número Base 7, e ", casais_numero_base_6, "indivíduos com essa Numerologia Individual.")
q3d <- sum(dados_individuo$Soma_Numeros == 7, na.rm = TRUE)
# Contar casais com Número Base 6 na Numerologia para Casal
q3d2 <- sum(dados_individuo$Numerologia_Individual == 7, na.rm = TRUE)
# Exibir o resultado
cat("Existem ", q3d, "indivíduos com o Número Base 7, e ", q3d2, "indivíduos com essa Numerologia Individual.")
# Função para calcular a numerologia do casal
numerologia_do_casal <- function(data_nascimento_1, data_nascimento_2) {
soma_numeros_1 <- extrair_numeros_data(data_nascimento_1)
soma_numeros_2 <- extrair_numeros_data(data_nascimento_2)
numero_base_1 <- calcular_numero_base(soma_numeros_1)
numero_base_2 <- calcular_numero_base(soma_numeros_2)
Nc <- calcular_numero_base(numero_base_1^2 + numero_base_2^7)
return(Nc)
}
# Calcular a numerologia do casal
numerologia_casal_exemplo <- numerologia_do_casal("31/7/2010", "23/12/1998")
# Exibir o resultado
cat("Numerologia do Casal:", numerologia_casal_exemplo, "\n")
