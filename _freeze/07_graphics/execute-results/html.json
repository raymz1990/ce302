{
  "hash": "4cc78cd76976345b2ba959cee681058f",
  "result": {
    "markdown": "---\nalways_allow_html: true\ntitle: \"7 Procedimentos Gráficos\"\n---\n\n\n## 7.1 Introdução ao ggplot2 \n\nO `ggplot2` é uma das bibliotecas mais populares para criação de gráficos em R. Ele foi desenvolvido por Hadley Wickham e é conhecido por sua abordagem de “*gramática dos gráficos*”, que permite criar visualizações complexas com facilidade. Uma das principais características do ggplot2 é o conceito de **camadas**, onde adicionamos componentes visuais ao gráfico de forma incremental, permitindo maior controle sobre a estética e os dados representados.\n\nPara começar a trabalhar com o ggplot2, precisamos carregar a biblioteca, o `ggplot2` faz parte do `tidyverse`.\n\nPara a aula de hoje, vamos agrupar 16 bancos de dados sobre “Filmes”, disponíveis em [Kaggle](https://www.kaggle.com/datasets/rajugc/imdb-movies-dataset-based-on-genre/).\n\nPrimeira coisa que precisamos fazer é ler os 16 bancos de dados, criar uma variável com o tipo do filme e em seguida montar o nosso banco único para podermos explorar os dados.\n\n* **Lendo os dados**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: data.table\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: tidyverse\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::between()     masks data.table::between()\n✖ dplyr::filter()      masks stats::filter()\n✖ dplyr::first()       masks data.table::first()\n✖ lubridate::hour()    masks data.table::hour()\n✖ lubridate::isoweek() masks data.table::isoweek()\n✖ dplyr::lag()         masks stats::lag()\n✖ dplyr::last()        masks data.table::last()\n✖ lubridate::mday()    masks data.table::mday()\n✖ lubridate::minute()  masks data.table::minute()\n✖ lubridate::month()   masks data.table::month()\n✖ lubridate::quarter() masks data.table::quarter()\n✖ lubridate::second()  masks data.table::second()\n✖ purrr::transpose()   masks data.table::transpose()\n✖ lubridate::wday()    masks data.table::wday()\n✖ lubridate::week()    masks data.table::week()\n✖ lubridate::yday()    masks data.table::yday()\n✖ lubridate::year()    masks data.table::year()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(magrittr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: magrittr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'magrittr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    set_names\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- list.files(\"./datasets/movies\", full.names = TRUE)\nfilmes <- list()\n\nfor (i in 1:length(files)) {\n  nome <- gsub(x = basename(files[i]), \n               pattern = \".csv\", \n               replacement = \"\")\n  \n  filmes[[i]] <- fread(files[i]) %>%\n    mutate(tipo = nome)\n  \n  filmes[[i]]$year %<>% as.integer()\n  filmes[[i]]$`gross(in $)` %<>% as.numeric()\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n\nWarning in filmes[[i]]$year %<>% as.integer(): NAs introduzidos por coerção\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %<>% bind_rows()\n\nfilmes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          movie_id                        movie_name year certificate runtime\n     1:  tt9114286    Black Panther: Wakanda Forever 2022       PG-13 161 min\n     2:  tt1630029          Avatar: The Way of Water 2022       PG-13 192 min\n     3:  tt5884796                             Plane 2023           R 107 min\n     4:  tt6710474 Everything Everywhere All at Once 2022           R 139 min\n     5:  tt5433140                            Fast X 2023                    \n    ---                                                                      \n368296: tt26698087                         Janissary   NA                    \n368297: tt26690183               World War 1 project   NA                    \n368298: tt26695367                                74   NA                    \n368299: tt26698193                    Pandora Palace 2019                    \n368300: tt26733697  Spion 11: Operasjon Traelandsfos 2001              75 min\n                             genre rating\n     1:   Action, Adventure, Drama    6.9\n     2: Action, Adventure, Fantasy    7.8\n     3:           Action, Thriller    6.5\n     4:  Action, Adventure, Comedy    8.0\n     5:     Action, Crime, Mystery     NA\n    ---                                  \n368296:        Drama, History, War     NA\n368297:                        War     NA\n368298:                        War     NA\n368299:   Action, Adventure, Drama     NA\n368300:                Comedy, War     NA\n                                                                                                                                                                                                                                     description\n     1:                                                                                                                The people of Wakanda fight to protect their home from intervening world powers as they mourn the death of King T'Challa.\n     2: Jake Sully lives with his newfound family formed on the extrasolar moon Pandora. Once a familiar threat returns to finish what was previously started, Jake must work with Neytiri and the army of the Na'vi race to protect their home.\n     3:                                                                                                                    A pilot finds himself caught in a war zone after he's forced to land his commercial aircraft during a terrible storm.\n     4:                                                A middle-aged Chinese immigrant is swept up into an insane adventure in which she alone can save existence by exploring other universes and connecting with the lives she could have led.\n     5:                                                                                                                                                Dom Toretto and his family are targeted by the vengeful son of drug kingpin Hernan Reyes.\n    ---                                                                                                                                                                                                                                         \n368296:                 A young man is captured and brainwashed to fight as a Janissary for the Ottoman Empire. He falls for a harem slave, who frees his mind, during the Second Siege of Vienna as he tries to save his love and his own mind.\n368297:                                                                                                                                                                                                                               Add a Plot\n368298:                                                                                                 74 centres on the lives of four women, and the gross injustices perpetrated against them, following the 1974 Turkish invasion of Cyprus.\n368299:         After Rajmahone Dictator Alexander Pandora launches a successful attack and occupation of neighboring Uzbekistan and Tajikistan, Brothers Biszak and Moyira attempt to infiltrate Pandora's palace to oust him once and for all.\n368300:                                                                                                                                                                                                                               Add a Plot\n                                                director       director_id\n     1:                                     Ryan Coogler  /name/nm3363032/\n     2:                                    James Cameron  /name/nm0000116/\n     3:                             Jean-François Richet  /name/nm0724938/\n     4:                     Dan Kwan, \\nDaniel Scheinert  /name/nm3453283/\n     5:                                  Louis Leterrier  /name/nm0504642/\n    ---                                                                   \n368296:                                                                   \n368297:                   Dominic Higgins, \\nIan Higgins  /name/nm3836407/\n368298:                                                                   \n368299:                                    Evan Kascinde /name/nm11925490/\n368300: Stein Vidar Aamodt, \\nOve Olsen, \\nJarle Solberg /name/nm14562635/\n                                                                         star\n     1:      Letitia Wright, \\nLupita Nyong'o, \\nDanai Gurira, \\nWinston Duke\n     2:    Sam Worthington, \\nZoe Saldana, \\nSigourney Weaver, \\nStephen Lang\n     3:              Gerard Butler, \\nMike Colter, \\nTony Goldwyn, \\nYoson An\n     4:     Michelle Yeoh, \\nStephanie Hsu, \\nJamie Lee Curtis, \\nKe Huy Quan\n     5: Vin Diesel, \\nJordana Brewster, \\nTyrese Gibson, \\nMichelle Rodriguez\n    ---                                                                      \n368296:                                                                      \n368297:                                                                      \n368298:                                                                      \n368299:  Muhammad Al Abasiri, \\nBrai Andujar, \\nDon Blachta, \\nRichard Colton\n368300:            Andreas Hansen, \\nTom Galdal, \\nJarle Solberg, \\nOve Olsen\n                                                                                                            star_id\n     1:                                         /name/nm4004793/,/name/nm2143282/,/name/nm1775091/,/name/nm6328300/\n     2:                                         /name/nm0941777/,/name/nm0757855/,/name/nm0000244/,/name/nm0002332/\n     3:                                         /name/nm0124930/,/name/nm1591496/,/name/nm0001282/,/name/nm5256788/\n     4:                        /name/nm3215397/,/name/nm0000706/,/name/nm3513533/,/name/nm0000130/,/name/nm0702841/\n     5:                                         /name/nm0004874/,/name/nm0108287/,/name/nm0879085/,/name/nm0735442/\n    ---                                                                                                            \n368296:                                                                                                            \n368297:                                                                                            /name/nm3838864/\n368298:                                                                                                            \n368299:                                      /name/nm11799756/,/name/nm8613643/,/name/nm14558346/,/name/nm14558348/\n368300: /name/nm14562634/,/name/nm14562633/,/name/nm14562636/,/name/nm14562637/,/name/nm14562633/,/name/nm14562634/\n         votes gross(in $)   tipo\n     1: 204835          NA action\n     2: 295119          NA action\n     3:  26220          NA action\n     4: 327858          NA action\n     5:     NA          NA action\n    ---                          \n368296:     NA          NA    war\n368297:     NA          NA    war\n368298:     NA          NA    war\n368299:     NA          NA    war\n368300:     NA          NA    war\n```\n:::\n:::\n\n\n### 7.1.1 Gráfico de Dispersão (Scatter Plot) \n\n* **Aplicação**: Mostra a relação entre **duas** variáveis **quantitativas**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% # Carregar o banco\n  ggplot() + ## Chamar o ggplot\n  aes( x = year, y = `gross(in $)`) + ## aplicar a estética, isto é, quais são as variáveis e o que elas significam, x e y, neste caso\n  geom_point() # Fazer o scatterplot\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 343261 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nPodemos incluir a cor dos pontos, mudando a estética do gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo) + ## Adicionamos cor\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 343261 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo) + \n  geom_point() + \n  theme_minimal() ## Incluímos tema\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 343261 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo) + \n  geom_point() + \n  facet_wrap(vars(tipo)) + ## Fazemos o gráfico separado por tipo\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 343261 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nSuponha que tenhamos interesse em que o tamanho dos pontos estejam relacionados com o *rating* do filme. Vamos fazer isso, agora, apenas para os filmes de animação.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% \"animation\") %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo, \n       size = rating) + \n  geom_point() + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 7845 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nPara ajustarmos a escala dos pontos, basta adcionarmos uma camada de `scale_size`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% \"animation\") %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo, \n       size = rating) + \n  geom_point() + \n  scale_size_continuous(range=c(0.01, 2)) + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 7845 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nPodemos alterar os nomes nos eixos utilizando a função `labs`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% \"animation\") %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo, \n       size = rating) + \n  geom_point() + \n  scale_size_continuous(range=c(0.01, 2)) + \n  labs(x = \"Ano\", \n       y = \"Investimento ($)\") + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 7845 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nPara incluírmos uma linha de tendência no gráfico podemos utilizar a função `geom_smooth`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% \"animation\") %>% \n  ggplot() +\n  aes( x = year, \n       y = `gross(in $)`, \n       color = tipo, \n       fill = tipo) + \n  geom_point() + \n  geom_smooth(method = \"loess\") + # O método aqui se refere ao método utilizado para estimação da curva\n  scale_size_continuous(range=c(0.01, 2)) + \n  labs(x = \"Ano\", \n       y = \"Investimento ($)\") + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 7845 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 7845 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### 7.1.2 Gráfico de Linhas \n\n* **Aplicação**: Mostra a relação entre **duas** variáveis **quantitativas**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year, tipo) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio, \n       color = tipo) + \n  geom_line() + \n  facet_wrap(vars(tipo)) + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 222 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + ## Alteramos a transparencia da linha\n  geom_point() + ## Colocamos Pontos\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + ## Alteramos a transparencia da linha\n  geom_point() + ## Colocamos Pontos\n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + \n  geom_point() + \n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  scale_y_continuous(labels = scales::label_dollar()) + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + \n  geom_point() + \n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  scale_y_continuous(labels = scales::label_dollar()) + ## Alterando o label dos eixos y e x\n  scale_x_continuous(breaks = seq(from = 1900, to = 2020, by = 10)) + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + \n  geom_point() + \n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  scale_y_continuous(labels = scales::label_dollar()) +\n  scale_x_continuous(breaks = seq(from = 1900, to = 2020, by = 10)) + \n  theme_minimal() +\n  theme(text = element_text(size = 20, \n                            hjust = 0.5, \n                            face = \"bold\")) # tamanho da fonte\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE), \n            n_filmes = n()) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + \n  geom_point(aes(size = n_filmes)) + \n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  scale_y_continuous(labels = scales::label_dollar()) +\n  scale_x_continuous(breaks = seq(from = 1900, to = 2020, by = 10)) + \n  theme_minimal() +\n  theme(text = element_text(size = 20, \n                            hjust = 0.5, \n                            face = \"bold\")) # tamanho da fonte\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE), \n            n_filmes = n()) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + \n  geom_point(aes(size = n_filmes)) + \n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  scale_y_continuous(labels = scales::label_dollar()) +\n  scale_x_continuous(breaks = seq(from = 1900, to = 2020, by = 10)) + \n  scale_size_continuous(range = c(0.1, 10)) + \n  theme_minimal() +\n  theme(text = element_text(size = 20, \n                            hjust = 0.5, \n                            face = \"bold\")) # tamanho da fonte\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(year) %>% \n  summarise(Valor_Gasto_Medio = mean(`gross(in $)`, na.rm = TRUE), \n            n_filmes = n()) %>%\n  ggplot() +\n  aes( x = year, \n       y = Valor_Gasto_Medio) + \n  geom_line(alpha = 0.2) + \n  geom_point(aes(size = n_filmes)) + \n  labs(x = \"Ano de Lançamento\", \n       y = \"Investimento ($)\", \n       title = \"Gráfico do investimento médio em filmes por ano\") + \n  scale_y_continuous(labels = scales::label_dollar(),\n                     trans = \"log10\") +\n  scale_x_continuous(breaks = seq(from = 1900, to = 2020, by = 10)) + \n  scale_size_continuous(range = c(0.1, 10)) + \n  theme_minimal() +\n  theme(text = element_text(size = 20, \n                            hjust = 0.5, \n                            face = \"bold\")) # tamanho da fonte\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n### 7.1.3 Gráfico de barras\n\n* **Aplicação**: Comparação de categorias em um eixo **categórico**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(tipo) %>% \n  summarise(Total_Investido = sum(`gross(in $)`, na.rm = TRUE)) %>%\n  mutate(tipo = reorder(tipo, Total_Investido)) %>% \n  ggplot() +\n  aes( x = tipo, \n       y = Total_Investido, \n       color = tipo, \n       fill = tipo) +\n  geom_col() + \n  scale_y_continuous(labels = scales::label_dollar()) +\n  coord_flip() +\n  labs(x = \"Tipo de Filme\", \n       y = \"Total Investido ($)\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  group_by(tipo) %>% \n  summarise(Total_Investido = sum(`gross(in $)`, na.rm = TRUE)) %>%\n  mutate(tipo = reorder(tipo, Total_Investido)) %>% \n  ggplot() +\n  aes( x = tipo, \n       y = Total_Investido, \n       color = tipo, \n       fill = tipo) +\n  geom_col(alpha = 0.2, \n           ltw = 2) + \n  scale_y_continuous(labels = scales::label_dollar()) +\n  coord_flip() +\n  labs(x = \"Tipo de Filme\", \n       y = \"Total Investido ($)\") + \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_col(alpha = 0.2, ltw = 2): Ignoring unknown parameters: `ltw`\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  mutate(tipo = stringr::str_to_title(tipo)) %>% \n  mutate(ano_categorico = case_when(year < 1900 ~ \"< 1900\", \n                                    year < 1925 ~ \"< 1925\", \n                                    year < 1950 ~ \"< 1950\", \n                                    year < 1975 ~ \"< 1975\", \n                                    year < 2000 ~ \"< 2000\", \n                                    year < 2025 ~ \"< 2025\")) %>%\n  group_by(tipo, ano_categorico) %>% \n  summarise(Total_Investido = sum(`gross(in $)`, na.rm = TRUE)) %>%\n  ungroup() %>% \n  group_by(tipo) %>% \n  mutate(total = sum(Total_Investido, na.rm = TRUE)) %>%\n  ggplot() +\n  aes( x = reorder(tipo, total), \n       y = Total_Investido, \n       color = ano_categorico, \n       fill = ano_categorico) +\n  geom_col() + \n  scale_y_continuous(labels = scales::label_dollar()) +\n  scale_color_manual(values = colorRampPalette(c(\"Blue\", \"Pink\"))(7)) + \n  scale_fill_manual(values = colorRampPalette(c(\"Blue\", \"Pink\"))(7)) + \n  \n  coord_flip() +\n  labs(x = \"Tipo de Filme\", \n       y = \"Total Investido ($)\",\n       color = \"Ano\", \n       fill = \"Ano\") + \n  theme_minimal() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 18))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'tipo'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### 7.1.4 Histograma\n\n* **Aplicação**: Visualização da distribuição de uma variável numérica.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating) +\n  geom_histogram(bins = 100, fill = \"#555555\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, fill = tipo) +\n  geom_histogram(bins = 100, na.rm = TRUE) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### 7.1.5 Densidade\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating) +\n  geom_density() +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_density()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, fill = tipo, color = tipo) +\n  geom_density(alpha = 0.1) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_density()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, fill = tipo, color = tipo) +\n  geom_density(alpha = 0.1) +\n  facet_wrap(vars(tipo)) + \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_density()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n### 7.1.6 Boxplot\n\n* **Aplicação**: Visualização da distribuição de uma variável numérica.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, fill = tipo, color = tipo) +\n  geom_boxplot(alpha = 0.1) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, \n      y = tipo, \n      fill = tipo, \n      color = tipo) +\n  geom_boxplot(alpha = 0.1, \n               outlier.shape = NA) +\n  geom_jitter(size = 0.1, \n              alpha = 0.1, \n              pch = 20) + \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n### 7.1.7 Gráfico de Violino\n\n* **Aplicação**: Visualização da distribuição de uma variável numérica.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, y = tipo, color = tipo) +\n  geom_violin(alpha = 0.1) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_ydensity()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, y = 1) +\n  geom_violin(alpha = 0.1) +\n  geom_boxplot() + \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_ydensity()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filmes) +\n  aes(x = rating, y = 1) +\n  geom_violin(alpha = 0.1) +\n  geom_boxplot(width = 0.4) + \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_ydensity()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 137362 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n## 7.2 Adições ao `ggplot2` & outros procedimentos gráficos\n\n### 7.2.1 Gráficos de Dispersão Hexagonais\n\nO `geom_hex` é útil para criar gráficos de dispersão hexagonais. Esses gráficos são úteis quando você deseja representar dados de alta densidade em um gráfico de dispersão, especialmente quando há muitos pontos que se sobrepõem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>%\n  filter(tipo %in% \"animation\") %>% \n  ggplot() + \n  aes(x = rating, y = year) + \n  geom_hex(bins = 20, \n           color = \"white\", \n           size = 2) +\n  scale_fill_gradient(low = \"#FED0BB\",\n                      high = \"#461220\", \n                      guide = FALSE) + \n  coord_flip() + \n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing non-finite values (`stat_binhex()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `guide` argument in `scale_*()` cannot be `FALSE`. This was deprecated in\nggplot2 3.3.4.\nℹ Please use \"none\" instead.\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n### 7.2.2 Gráfico de Contorno\n\nO `geom_contour` é uma camada geométrica do pacote ggplot2 em R que é usada para criar gráficos de contorno. Os gráficos de contorno são usados para visualizar a densidade de pontos em um espaço bidimensional, onde as linhas de contorno representam regiões de densidade semelhante. Isso é útil quando você deseja identificar padrões de densidade em um gráfico de dispersão ou mapa.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>%\n  filter(tipo %in% \"war\") %>% \n  mutate(runtime_num = stringr::str_remove(runtime, \"min\") %>% \n           str_squish() %>% \n           as.numeric()) %>% \n  filter(!is.na(runtime_num)) %>% \n  filter(`gross(in $)` > 0 | !is.na(`gross(in $)`)) %>% \n  ggplot() + \n  aes(x = year, \n      y = runtime_num) + \n  geom_density_2d() +\n  theme_minimal() + \n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>%\n  filter(tipo %in% c(\"war\", \"animation\", \"horror\")) %>%\n  mutate(runtime_num = stringr::str_remove(runtime, \"min\") %>% \n           str_squish() %>% \n           as.numeric()) %>% \n  filter(!is.na(runtime_num)) %>% \n  filter(`gross(in $)` > 0 | !is.na(`gross(in $)`)) %>% \n  ggplot() + \n  aes(x = year, \n      y = runtime_num) + \n  geom_density_2d_filled(contour_var = \"density\") +\n  theme_minimal() + \n  theme(legend.position = \"none\") +\n  facet_wrap(vars(tipo), scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `runtime_num = stringr::str_remove(runtime, \"min\") %>%\n  str_squish() %>% as.numeric()`.\nCaused by warning in `stringr::str_remove(runtime, \"min\") %>% str_squish() %>% as.numeric()`:\n! NAs introduzidos por coerção\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n## 7.3 Utilizando o pacote `esquisse` \n\nUma opção para facilitar a utilização do pacote `ggplot2` é utilizarmos o *addin* `esquisse`. A utilização do pacote permite a criação de um gráfico base que podemos personalizar em seguir.\n\n### 7.3.1 Adcionando `labels` nos gráficos\n\nMuitas vezes temos interesse em incluir alguma informação no nosso gráfico, seja ela por meio de um texto ou anotação. Uma maneira simples e rápida para fazermos isso é pelo uso da estética `label` e o `geom_text`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% c(\"animation\")) %>% \n  mutate(nome = ifelse(`gross(in $)` > quantile(`gross(in $)`, 0.95, na.rm = T), movie_name, NA)) %>% \n  mutate(col = ifelse(!is.na(nome), \"Importante\", \"Não Importante\")) %>%\n  ggplot() +\n  aes(x = year, \n      y = rating, \n      label = nome, \n      color = col)+\n  geom_point() +\n  geom_label() +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 8390 rows containing missing values (`geom_label()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\nContudo, nem sempre é possível incluirmos os labels dessa maneira. A extensão `ggrepel` é uma alternativa, permitindo que vários labels seja adcionados sem sobreposição.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(ggrepel)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: ggrepel\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% c(\"animation\")) %>% \n  mutate(nome = ifelse(`gross(in $)` > quantile(`gross(in $)`, 0.95, na.rm = T), movie_name, NA)) %>% \n  mutate(col = ifelse(!is.na(nome), \"Importante\", \"Não Importante\")) %>%\n  ggplot() +\n  aes(x = year, \n      y = rating, \n      label = nome, \n      color = col)+\n  geom_point() +\n  geom_label_repel(box.padding = 0.5, \n                   max.overlaps = 1000) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 8390 rows containing missing values (`geom_label_repel()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n  filter(tipo %in% c(\"animation\")) %>% \n  mutate(nome = ifelse(`gross(in $)` > quantile(`gross(in $)`, 0.95, na.rm = T), movie_name, NA)) %>% \n  mutate(col = ifelse(!is.na(nome), \"Importante\", \"Não Importante\")) %>%\n  ggplot() +\n  aes(x = year, \n      y = rating, \n      label = nome, \n      color = col)+\n  geom_point() +\n  geom_text_repel(box.padding = 0.5, \n                  max.overlaps = 1000, \n                  nudge_x = .15,\n                  nudge_y = 1,\n                  segment.curvature = -0.1,\n                  segment.ncp = 3,\n                  segment.angle = 20\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 8390 rows containing missing values (`geom_text_repel()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n## 7.4 Layouts\n\nMuitas vezes precisamos colocar diversos gráficos em uma mesma página. Para isso, podemos utilizar diversos pacotes como o `cowplot` e o `patchwork`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: patchwork\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = \n  filmes %>% \n  filter(tipo %in% c(\"animation\")) %>% \n  mutate(nome = ifelse(`gross(in $)` > quantile(`gross(in $)`, 0.95, na.rm = T), movie_name, NA)) %>% \n  mutate(col = ifelse(!is.na(nome), \"Importante\", \"Não Importante\")) %>%\n  ggplot() +\n  aes(x = year, \n      y = rating, \n      label = nome, \n      color = col)+\n  geom_point() +\n  geom_text_repel(box.padding = 0.5, \n                  max.overlaps = 1000, \n                  nudge_x = .15,\n                  nudge_y = 1,\n                  segment.curvature = -0.1,\n                  segment.ncp = 3,\n                  segment.angle = 20\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\np2 = filmes %>% \n  filter(tipo %in% c(\"animation\")) %>% \n  ggplot() +\n  aes(group = year, \n      y = rating, \n  )+\n  geom_boxplot() +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\np3 = filmes %>% \n  filter(tipo %in% c(\"animation\")) %>% \n  group_by(year) %>% \n  summarise(rate = mean(rating, na.rm = TRUE)) %>% \n  ggplot()+\n  aes(x = year, \n      y = rate) + \n  geom_line() +\n  geom_point() +\n  theme_minimal()\n\np1 / p2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 8390 rows containing missing values (`geom_text_repel()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2 + p3\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 8390 rows containing missing values (`geom_text_repel()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 5 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 + p2 )/(p3) + plot_annotation(tag_levels = \"A\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 8390 rows containing missing values (`geom_text_repel()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3658 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 5 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n### 7.4.1 Exportando gráfico\n\nPara exportarmos um gráfico como PDF ou PNG podemos realizar o seguinte procedimento:\n\n\n::: {.cell}\n\n```{.latex .cell-code}\nCairo::CairoPDF(\"Caminho/nome_do_grafico.pdf\")\np1\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.latex .cell-code}\nCairo::CairoPNG(\"Caminho/nome_do_grafico.png\")\np1\ndev.off()\n```\n:::\n\n\n### 7.4.2 Gráficos Interativos\n\nPodemos transformar qualquer gráfico do ggplot em interativo utilizando o pacote `plotly`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: plotly\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plotly'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np3 %>%  ggplotly()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-3c2de291774bc906c97c\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3c2de291774bc906c97c\">{\"x\":{\"data\":[{\"x\":[1916,1917,1918,1920,1921,1923,1924,1925,1926,1927,1928,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2027,null],\"y\":[null,7.4,7.85,7,null,6.4,null,null,7.8,5.5,5.85,6.7,6.3,4.6,null,5.4,7.05,6.35,7.43333333333333,null,6.6,7.6,6.8,7.3,6.3,5.4,6.475,6.7,6.38,6.02857142857143,6.56666666666667,7.25,7.06666666666667,6.27142857142857,7.6,6.88,6.65,6.7,7.06666666666667,6.77142857142857,6.36,6.38,6.34166666666667,6.86666666666667,6.9,6.25555555555556,6.49230769230769,6.22142857142857,6.46666666666667,6.65384615384615,6.66666666666667,6.37142857142857,6.18333333333333,6.94117647058824,6.54444444444444,6.26666666666667,6.55,6.68636363636364,6.64583333333333,6.6,6.93703703703704,6.83611111111111,6.7046511627907,6.39444444444444,6.8,6.55348837209302,6.58214285714286,6.71363636363636,6.80263157894737,6.61785714285714,6.78518518518518,6.57857142857143,6.325,7.17941176470588,6.49411764705882,6.42631578947368,6.328,6.38775510204082,6.55227272727273,6.28771929824561,6.064,6.35409836065574,6.21111111111111,6.08783783783784,6.37866666666667,6.14155844155844,6.17614678899083,6.378125,6.16829268292683,6.22330827067669,6.22450331125828,6.12326732673267,6.15375722543353,6.21931818181818,6.35948717948718,6.17552083333333,6.21094527363184,6.13034188034188,6.17095435684647,6.07245283018868,6.3512077294686,6.4710407239819,6.51988950276243,7.45357142857143,null,null,null,null],\"text\":[\"year: 1916<br />rate:      NaN\",\"year: 1917<br />rate: 7.400000\",\"year: 1918<br />rate: 7.850000\",\"year: 1920<br />rate: 7.000000\",\"year: 1921<br />rate:      NaN\",\"year: 1923<br />rate: 6.400000\",\"year: 1924<br />rate:      NaN\",\"year: 1925<br />rate:      NaN\",\"year: 1926<br />rate: 7.800000\",\"year: 1927<br />rate: 5.500000\",\"year: 1928<br />rate: 5.850000\",\"year: 1930<br />rate: 6.700000\",\"year: 1931<br />rate: 6.300000\",\"year: 1932<br />rate: 4.600000\",\"year: 1933<br />rate:      NaN\",\"year: 1934<br />rate: 5.400000\",\"year: 1935<br />rate: 7.050000\",\"year: 1936<br />rate: 6.350000\",\"year: 1937<br />rate: 7.433333\",\"year: 1938<br />rate:      NaN\",\"year: 1939<br />rate: 6.600000\",\"year: 1940<br />rate: 7.600000\",\"year: 1941<br />rate: 6.800000\",\"year: 1942<br />rate: 7.300000\",\"year: 1944<br />rate: 6.300000\",\"year: 1945<br />rate: 5.400000\",\"year: 1946<br />rate: 6.475000\",\"year: 1947<br />rate: 6.700000\",\"year: 1948<br />rate: 6.380000\",\"year: 1949<br />rate: 6.028571\",\"year: 1950<br />rate: 6.566667\",\"year: 1951<br />rate: 7.250000\",\"year: 1952<br />rate: 7.066667\",\"year: 1953<br />rate: 6.271429\",\"year: 1954<br />rate: 7.600000\",\"year: 1955<br />rate: 6.880000\",\"year: 1956<br />rate: 6.650000\",\"year: 1957<br />rate: 6.700000\",\"year: 1958<br />rate: 7.066667\",\"year: 1959<br />rate: 6.771429\",\"year: 1960<br />rate: 6.360000\",\"year: 1961<br />rate: 6.380000\",\"year: 1962<br />rate: 6.341667\",\"year: 1963<br />rate: 6.866667\",\"year: 1964<br />rate: 6.900000\",\"year: 1965<br />rate: 6.255556\",\"year: 1966<br />rate: 6.492308\",\"year: 1967<br />rate: 6.221429\",\"year: 1968<br />rate: 6.466667\",\"year: 1969<br />rate: 6.653846\",\"year: 1970<br />rate: 6.666667\",\"year: 1971<br />rate: 6.371429\",\"year: 1972<br />rate: 6.183333\",\"year: 1973<br />rate: 6.941176\",\"year: 1974<br />rate: 6.544444\",\"year: 1975<br />rate: 6.266667\",\"year: 1976<br />rate: 6.550000\",\"year: 1977<br />rate: 6.686364\",\"year: 1978<br />rate: 6.645833\",\"year: 1979<br />rate: 6.600000\",\"year: 1980<br />rate: 6.937037\",\"year: 1981<br />rate: 6.836111\",\"year: 1982<br />rate: 6.704651\",\"year: 1983<br />rate: 6.394444\",\"year: 1984<br />rate: 6.800000\",\"year: 1985<br />rate: 6.553488\",\"year: 1986<br />rate: 6.582143\",\"year: 1987<br />rate: 6.713636\",\"year: 1988<br />rate: 6.802632\",\"year: 1989<br />rate: 6.617857\",\"year: 1990<br />rate: 6.785185\",\"year: 1991<br />rate: 6.578571\",\"year: 1992<br />rate: 6.325000\",\"year: 1993<br />rate: 7.179412\",\"year: 1994<br />rate: 6.494118\",\"year: 1995<br />rate: 6.426316\",\"year: 1996<br />rate: 6.328000\",\"year: 1997<br />rate: 6.387755\",\"year: 1998<br />rate: 6.552273\",\"year: 1999<br />rate: 6.287719\",\"year: 2000<br />rate: 6.064000\",\"year: 2001<br />rate: 6.354098\",\"year: 2002<br />rate: 6.211111\",\"year: 2003<br />rate: 6.087838\",\"year: 2004<br />rate: 6.378667\",\"year: 2005<br />rate: 6.141558\",\"year: 2006<br />rate: 6.176147\",\"year: 2007<br />rate: 6.378125\",\"year: 2008<br />rate: 6.168293\",\"year: 2009<br />rate: 6.223308\",\"year: 2010<br />rate: 6.224503\",\"year: 2011<br />rate: 6.123267\",\"year: 2012<br />rate: 6.153757\",\"year: 2013<br />rate: 6.219318\",\"year: 2014<br />rate: 6.359487\",\"year: 2015<br />rate: 6.175521\",\"year: 2016<br />rate: 6.210945\",\"year: 2017<br />rate: 6.130342\",\"year: 2018<br />rate: 6.170954\",\"year: 2019<br />rate: 6.072453\",\"year: 2020<br />rate: 6.351208\",\"year: 2021<br />rate: 6.471041\",\"year: 2022<br />rate: 6.519890\",\"year: 2023<br />rate: 7.453571\",\"year: 2024<br />rate:      NaN\",\"year: 2025<br />rate:      NaN\",\"year: 2027<br />rate:      NaN\",\"year:   NA<br />rate:      NaN\"],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,0,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,0,0,1)\"}},\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.2283105022831,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":31.4155251141553},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1910.45,2032.55],\"tickmode\":\"array\",\"ticktext\":[\"1920\",\"1950\",\"1980\",\"2010\"],\"tickvals\":[1920,1950,1980,2010],\"categoryorder\":\"array\",\"categoryarray\":[\"1920\",\"1950\",\"1980\",\"2010\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.4375,8.0125],\"tickmode\":\"array\",\"ticktext\":[\"5\",\"6\",\"7\",\"8\"],\"tickvals\":[5,6,7,8],\"categoryorder\":\"array\",\"categoryarray\":[\"5\",\"6\",\"7\",\"8\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"rate\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"944767b401d\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"944f055ecd\":{\"x\":{},\"y\":{}}},\"cur_data\":\"944767b401d\",\"visdat\":{\"944767b401d\":[\"function (y) \",\"x\"],\"944f055ecd\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## 7.5 Gráficos Animados\n\nPara fazer gráficos dinâmicos podemos utilizar o `gganimate`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(gganimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: gganimate\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilmes %>% \n    group_by(tipo, year) %>% \n    summarise(n = log10(n())) %>%\n    group_by(year) %>% \n    mutate(Rank = rank(n)) %>%\n    ggplot() + \n    aes(x = Rank, \n        y = n, \n        color = tipo, \n        fill = tipo, \n        label = tipo) +\n    geom_col(show.legend = F, alpha = 0.5) + \n    geom_text(show.legend = F, nudge_y = 1 , size = 10) + \n    coord_flip() + \n    scale_y_continuous(limits  = c(0,8)) + \n    # Agora, incluimos as partes do gganimate\n    labs(#title = 'Ano: {frame_time}', \n        x = 'Tipo de Filme', \n        y = 'Número de Filmes') +\n    #transition_time(year) +\n    ggtitle('{closest_state}') +\n    transition_states(year,\n                      transition_length = 5,\n                      state_length = 1) +\n    ease_aes('linear') + \n    theme_minimal() +  \n    theme(text = element_text(size = 20)) + \n    exit_fade() +   \n    enter_fade() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'tipo'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in lapply(row_vars$states, as.integer): NAs introduzidos por coerção\n\nWarning in lapply(row_vars$states, as.integer): NAs introduzidos por coerção\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in expand_panel(..., self = self): NAs introduzidos por coerção\n\nWarning in expand_panel(..., self = self): NAs introduzidos por coerção\n```\n:::\n\n::: {.cell-output-display}\n![](07_graphics_files/figure-html/unnamed-chunk-52-1.gif)\n:::\n:::\n\n\n\n## 7.6 Exercício\n1. Faça pelo menos cinco gráficos (distintos), utilizando os diferentes dados apresentados no conjunto de dados `filmes`.\n\n2. Combine os gráficos em uma página e salve em um pdf.\n\n3. Crie um gráfico animado.",
    "supporting": [
      "07_graphics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<script src=\"site_libs/plotly-binding-4.10.2/plotly.js\"></script>\r\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}