{
  "hash": "818b74914b52e8a914b94c70be970e3e",
  "result": {
    "markdown": "---\ntitle: \"Lista 2\"\nauthor: \"Raymundo\"\n#date: \"2023-09-27\"\noutput:\n  html_document:                    \n    toc: true                       \n    toc_depth: 3                    \n    toc_float:                      \n      collapsed: true\n      smooth_scroll: true\n    number_sections: true           \n\n    highlight: espresso\n               \n    fig_width: 7                    \n    fig_height: 6                   \n    fig_caption: true               \n    fig_align: 'center'\n    #code_folding: hide              \n    #keep_md: true \n---\n\n\n---\n\n# Aula 02: Conceitos básicos de R\n\n---\n\n## Atribuição de Variáveis: Numéricas, Character e Vetores\n\n---\n \n### 1. Crie uma variável chamada \"idade\" e atribua o valor 25.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nidade <- 25 \nidade\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 25\n```\n:::\n:::\n\n\n---\n\n### 2. Declare uma variável \"nome\" e atribua o nome \"Maria\".\n\n::: {.cell}\n\n```{.r .cell-code}\nnome <- 'Maria'\nnome\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Maria\"\n```\n:::\n:::\n\n\n\n\n---\n\n### 3. Crie um vetor numérico chamado \"notas\" com valores 8, 9, 7 e 6.\n\n::: {.cell}\n\n```{.r .cell-code}\nnotas <- c(8, 9, 7, 6)\nnotas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8 9 7 6\n```\n:::\n:::\n\n\n\n---\n\n### 4. Crie um vetor de caracteres \"frutas\" com os elementos \"maçã\", \"banana\" e \"laranja\".\n\n::: {.cell}\n\n```{.r .cell-code}\nfrutas <- c('maçã',\n            'banana',\n            'laranja')\nfrutas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"maçã\"    \"banana\"  \"laranja\"\n```\n:::\n:::\n\n\n\n---\n\n### 5. Crie um vetor numérico \"idades\" com os valores 30, 40 e 50.\n\n::: {.cell}\n\n```{.r .cell-code}\nidades <- c(30, 40, 50)\nidades\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30 40 50\n```\n:::\n:::\n\n\n---\n\n## Criação de Vetores Utilizando c, seq e rep\n\n---\n\n### 6. Utilizando a função `c()`, crie um vetor com os números de 1 a 10.\n\n::: {.cell}\n\n```{.r .cell-code}\nnumeros <- c(1:10)\nnumeros\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n:::\n\n\n\n---\n\n### 7. Crie um vetor com os números pares de 2 a 20 usando a função `seq()`.\n\n::: {.cell}\n\n```{.r .cell-code}\nnumeros_pares <- seq(from = 2,\n                     to = 20,\n                     by = 2)\nnumeros_pares\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  2  4  6  8 10 12 14 16 18 20\n```\n:::\n:::\n\n\n\n---\n\n### 8. Crie um vetor com cinco repetições do valor 5 usando a função `rep()`.\n\n::: {.cell}\n\n```{.r .cell-code}\nrepeticoes <- rep(5, 5)\nrepeticoes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5 5 5 5 5\n```\n:::\n:::\n\n\n\n---\n\n### 9. Crie um vetor chamado \"alturas\" com 100 alturas, variando de 1.50 a 2.00. \n\n::: {.cell}\n\n```{.r .cell-code}\nalturas <- round(seq(1.50, 2.00, length.out = 100), 2)\nalturas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 1.50 1.51 1.51 1.52 1.52 1.53 1.53 1.54 1.54 1.55 1.55 1.56 1.56 1.57 1.57\n [16] 1.58 1.58 1.59 1.59 1.60 1.60 1.61 1.61 1.62 1.62 1.63 1.63 1.64 1.64 1.65\n [31] 1.65 1.66 1.66 1.67 1.67 1.68 1.68 1.69 1.69 1.70 1.70 1.71 1.71 1.72 1.72\n [46] 1.73 1.73 1.74 1.74 1.75 1.75 1.76 1.76 1.77 1.77 1.78 1.78 1.79 1.79 1.80\n [61] 1.80 1.81 1.81 1.82 1.82 1.83 1.83 1.84 1.84 1.85 1.85 1.86 1.86 1.87 1.87\n [76] 1.88 1.88 1.89 1.89 1.90 1.90 1.91 1.91 1.92 1.92 1.93 1.93 1.94 1.94 1.95\n [91] 1.95 1.96 1.96 1.97 1.97 1.98 1.98 1.99 1.99 2.00\n```\n:::\n:::\n\n\n\n---\n \n## Operadores Aritméticos\n\n---\n\n### 9. Multiplique a variável \"idade\" por 2 e atribua o resultado a uma nova variável.\n\n::: {.cell}\n\n```{.r .cell-code}\nidade2 <- idade / 2\nidade2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12.5\n```\n:::\n:::\n\n\n\n---\n\n### 10. Calcule a média das notas do vetor \"notas\".\n\n::: {.cell}\n\n```{.r .cell-code}\nmedia_notas <- mean(notas)\nmedia_notas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7.5\n```\n:::\n:::\n\n\n\n---\n\n### 11. Eleve o vetor \"idades\" ao quadrado.\n\n::: {.cell}\n\n```{.r .cell-code}\nidades_quadrado <- idades ^ 2\nidades_quadrado\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  900 1600 2500\n```\n:::\n:::\n\n\n---\n\n### 12. Realize a divisão inteira de 15 por 4.\n\n::: {.cell}\n\n```{.r .cell-code}\ndivisao_inteira <- 15 %/% 4\ndivisao_inteira\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n\n---\n\n### 13. Calcule o resto da divisão de 15 por 4.\n\n::: {.cell}\n\n```{.r .cell-code}\nresto_divisao <- 15 %% 4\nresto_divisao\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n\n---\n\n## Operadores Relacionais\n\n---\n \n### 14. Verifique se a variável \"idade\" é maior que 18.\n\n::: {.cell}\n\n```{.r .cell-code}\nidade_maior <- idade > 18\nidade_maior\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n\n---\n\n### 15. Determine se o primeiro elemento do vetor \"notas\" é igual a 8.\n\n::: {.cell}\n\n```{.r .cell-code}\nnotas_maior <- notas[1] == 8\nnotas_maior\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n\n---\n\n### 16. Verifique se algum valor no vetor \"idades\" é menor que 35.\n\n::: {.cell}\n\n```{.r .cell-code}\nidades_menor <- idades < 35\nidades_menor\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE FALSE FALSE\n```\n:::\n:::\n\n\n\n---\n\n### 17. Selecione as alturas menores do que 1.85 do vetor de \"alturas\".\n\n::: {.cell}\n\n```{.r .cell-code}\nalturas_menores <- alturas[alturas < 1.85]\nalturas_menores\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1.50 1.51 1.51 1.52 1.52 1.53 1.53 1.54 1.54 1.55 1.55 1.56 1.56 1.57 1.57\n[16] 1.58 1.58 1.59 1.59 1.60 1.60 1.61 1.61 1.62 1.62 1.63 1.63 1.64 1.64 1.65\n[31] 1.65 1.66 1.66 1.67 1.67 1.68 1.68 1.69 1.69 1.70 1.70 1.71 1.71 1.72 1.72\n[46] 1.73 1.73 1.74 1.74 1.75 1.75 1.76 1.76 1.77 1.77 1.78 1.78 1.79 1.79 1.80\n[61] 1.80 1.81 1.81 1.82 1.82 1.83 1.83 1.84 1.84\n```\n:::\n:::\n\n\n\n---\n\n## Utilização de Funções Matemáticas Básicas\n\n---\n \n### 17. Calcule a raiz quadrada de 16.\n\n::: {.cell}\n\n```{.r .cell-code}\nraiz <- sqrt(16)\nraiz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n\n---\n\n### 18. Arredonde o valor 3.78 para o inteiro mais próximo.\n\n::: {.cell}\n\n```{.r .cell-code}\narredondando_cima <- ceiling(3.78)\narredondando_cima\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n\n---\n\n### 19. Arredonde para cima o vetor de alturas.\n\n::: {.cell}\n\n```{.r .cell-code}\narredondando_cima_alturas <- ceiling(alturas)\narredondando_cima_alturas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n```\n:::\n:::\n\n\n\n---\n\n### 20. Arredonde para baixo o vetor de alturas\n\n::: {.cell}\n\n```{.r .cell-code}\narredondando_cima_alturas <- floor(alturas)\narredondando_cima_alturas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\n```\n:::\n:::\n\n\n\n---\n\n### 21. Calcule o valor absoluto da diferença entre 10 e 7.\n\n::: {.cell}\n\n```{.r .cell-code}\nabsoluto <- abs(10 - 7)\nabsoluto\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n\n---\n  \n## Utilização de Funções para Manipulação de Texto: R Base e Stringr\n\n---\n \n### 22. Crie uma string com o texto \"Análise de Dados\".\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto <- 'Analise de Dados'\ntexto\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Analise de Dados\"\n```\n:::\n:::\n\n\n\n---\n\n### 23. Extraia os primeiros 5 caracteres da string criada no exercício anterior.\n\n::: {.cell}\n\n```{.r .cell-code}\ncinco_caract <- substr(x = texto[1], \n                       start = 1,\n                       stop = 5)\ncinco_caract\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Anali\"\n```\n:::\n:::\n\n\n---\n\n### 24. Converta a string \"R é uma linguagem de programação\" para maiúsculas.\n\n::: {.cell}\n\n```{.r .cell-code}\noutro_texto <- \"R é uma linguagem de programação\" \nmaiusculas <- toupper(outro_texto)\nmaiusculas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"R É UMA LINGUAGEM DE PROGRAMAÇÃO\"\n```\n:::\n:::\n\n\n\n---\n\n### 25. Substitua a palavra \"linguagem\" por \"software\" na mesma string.\n\n::: {.cell}\n\n```{.r .cell-code}\nsubst<- gsub(pattern = \"linguagem\", \n             replacement = \"software\",\n             x = outro_texto)\nsubst  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"R é uma software de programação\"\n```\n:::\n:::\n\n   \n\n---\n\n## Regex\n\n---\n\n### 27. Use expressões regulares para encontrar todos os dígitos em \"Texto1234\".\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto1234 <- \"Texto1234\"\ntexto1234 <- regmatches(texto1234, gregexpr(\"\\\\d\", texto1234, perl = TRUE))\ntexto1234\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"1\" \"2\" \"3\" \"4\"\n```\n:::\n:::\n\n\n\n---\n\n### 28. Utilize regex para extrair as palavras que começam com a letra \"C\" em \"Casa, carro, frutas, animais e cidade\".\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\n\ntexto3 <- c('Casa', 'carro', 'frutas', 'animais', 'abacate', 'e', 'cidade')\ntexto3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Casa\"    \"carro\"   \"frutas\"  \"animais\" \"abacate\" \"e\"       \"cidade\" \n```\n:::\n\n```{.r .cell-code}\npalavras_c <- str_subset(texto3, pattern = \"^(?![cC])\")\npalavras_c\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"frutas\"  \"animais\" \"abacate\" \"e\"      \n```\n:::\n:::\n\n\n\n\n---\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}