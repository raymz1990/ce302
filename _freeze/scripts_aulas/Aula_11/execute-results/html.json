{
  "hash": "0372546bdf881728f594b1821c7d3e2a",
  "result": {
    "markdown": "---\nalways_allow_html: true\ntitle: \"Aula 11\"\n---\n\n\n## Strings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(magrittr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'magrittr'\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n:::\n\n```{.r .cell-code}\nx <- \"Uma string aqui\"\ny <- 'Uma string aqui' \n\nx == y\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_com_aspas <- \"Ela disse: 'Olá'\"\nvar_com_aspas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ela disse: 'Olá'\"\n```\n:::\n\n```{.r .cell-code}\nprint(var_com_aspas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ela disse: 'Olá'\"\n```\n:::\n\n```{.r .cell-code}\nvar_com_aspas_simples <- 'Ela disse: \"Olá\"'\nvar_com_aspas_simples\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ela disse: \\\"Olá\\\"\"\n```\n:::\n\n```{.r .cell-code}\nvar_com_aspas_dupla <- \"Ela disse: \\\"Olá\\\"\"\nvar_com_aspas_dupla\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ela disse: \\\"Olá\\\"\"\n```\n:::\n\n```{.r .cell-code}\nstr_view(var_com_aspas_dupla) # Imprime na tela: interpreta escape char\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ Ela disse: \"Olá\"\n```\n:::\n\n```{.r .cell-code}\nvar_com_aspas_dupla # imprimir na tela: cru\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ela disse: \\\"Olá\\\"\"\n```\n:::\n\n```{.r .cell-code}\ncat(var_com_aspas_dupla) # Dentro de funções\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEla disse: \"Olá\"\n```\n:::\n:::\n\n\n## Caracteres especiais\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_com_espaco <- \" Olá, meu nome é Deisy.\"\nvar_com_espaco\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \" Olá, meu nome é Deisy.\"\n```\n:::\n\n```{.r .cell-code}\nvar_com_espaco_2 = \"\\\\sOlá, meu nome é Deisy.\"\nstr_view(var_com_espaco_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ \\sOlá, meu nome é Deisy.\n```\n:::\n\n```{.r .cell-code}\nvar_com_2_linhas = \"Olá\\nmeu nome é\\nDeisy\"\nstr_view(var_com_2_linhas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ Olá\n    │ meu nome é\n    │ Deisy\n```\n:::\n\n```{.r .cell-code}\nvar_com_tab = \"Olá\\tmeu\\tnome\\té\"\nvar_com_tab\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Olá\\tmeu\\tnome\\té\"\n```\n:::\n\n```{.r .cell-code}\nstr_view(var_com_tab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ Olá{\\t}meu{\\t}nome{\\t}é\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n\"\\\\\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"\\\\\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto_unicode_grau <- \"A temperatura é de 25\\u00B0C.\"\nstr_view(texto_unicode_grau)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ A temperatura é de 25°C.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto_multilinhas_unicode <- \"Primeira linha\\u000ASegunda linha\"\nstr_view(texto_multilinhas_unicode)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ Primeira linha\n    │ Segunda linha\n```\n:::\n\n```{.r .cell-code}\nsimbolo_somatorio <- \"O símolo do somatório é: \\u2211\"\nstr_view(simbolo_somatorio)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ O símolo do somatório é: ∑\n```\n:::\n\n```{.r .cell-code}\nemoji <- \"OMG! Também posso usar emoji! \\U1F631\"\nstr_view(emoji)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ OMG! Também posso usar emoji! 😱\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(nome = c(\"Ana\", \"Maria\", \"João\", NA), \n                 sobrenome= c(\"Santos\", \"Silva\", \"Souza\", NA))\ndf %>% \n  mutate(ola = paste(\"Boa noite\", nome))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome             ola\n1   Ana    Santos   Boa noite Ana\n2 Maria     Silva Boa noite Maria\n3  João     Souza  Boa noite João\n4  <NA>      <NA>    Boa noite NA\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(ola = str_c(\"Boa noite \", nome, \" \", sobrenome, \"!\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome                    ola\n1   Ana    Santos  Boa noite Ana Santos!\n2 Maria     Silva Boa noite Maria Silva!\n3  João     Souza  Boa noite João Souza!\n4  <NA>      <NA>                   <NA>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(mensagem = str_glue(\"Boa noite {nome} {sobrenome}!\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome               mensagem\n1   Ana    Santos  Boa noite Ana Santos!\n2 Maria     Silva Boa noite Maria Silva!\n3  João     Souza  Boa noite João Souza!\n4  <NA>      <NA>       Boa noite NA NA!\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$nome %>% \n  na.exclude() %>% \n  paste(., collapse = \", \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ana, Maria, João\"\n```\n:::\n\n```{.r .cell-code}\ndf$nome %>% \n  str_flatten(na.rm = TRUE, \n              collapse = \", \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ana, Maria, João\"\n```\n:::\n\n```{.r .cell-code}\ndf$nome %>% \n  str_flatten(na.rm = TRUE, \n              collapse = \", \", \n              last = \" e \" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ana, Maria e João\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %<>% \n  mutate(Nome_Sobrenome = str_c(nome, sobrenome, \n                                sep = \" \"))\n\ndf$Nome_Sobrenome %>%\n  str_split(., \" \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"Ana\"    \"Santos\"\n\n[[2]]\n[1] \"Maria\" \"Silva\"\n\n[[3]]\n[1] \"João\"  \"Souza\"\n\n[[4]]\n[1] NA\n```\n:::\n\n```{.r .cell-code}\ndf$Nome_Sobrenome %>%\n  str_split(., \" \", simplify = T) %>%\n  as.data.frame()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     V1     V2\n1   Ana Santos\n2 Maria  Silva\n3  João  Souza\n4  <NA>       \n```\n:::\n:::\n\n\n## Formatação\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto_exemplo = c(\"caixa baixa\",\n                  \"CAIXA ALTA\", \n                  \"Texto de sentença\", \n                  \"Texto Em Título\")\nstr_to_lower(texto_exemplo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"caixa baixa\"       \"caixa alta\"        \"texto de sentença\"\n[4] \"texto em título\"  \n```\n:::\n\n```{.r .cell-code}\nstr_to_upper(texto_exemplo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"CAIXA BAIXA\"       \"CAIXA ALTA\"        \"TEXTO DE SENTENÇA\"\n[4] \"TEXTO EM TÍTULO\"  \n```\n:::\n\n```{.r .cell-code}\nstr_to_sentence(texto_exemplo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Caixa baixa\"       \"Caixa alta\"        \"Texto de sentença\"\n[4] \"Texto em título\"  \n```\n:::\n\n```{.r .cell-code}\nstr_to_title(texto_exemplo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Caixa Baixa\"       \"Caixa Alta\"        \"Texto De Sentença\"\n[4] \"Texto Em Título\"  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto_com_espaços = \"  Olá, esse texto tem    diversos        espaços completamente desnecessários. \"\nstr_view(texto_com_espaços)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │   Olá, esse texto tem    diversos        espaços completamente desnecessários. \n```\n:::\n\n```{.r .cell-code}\nstr_trim(texto_com_espaços, side = \"left\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Olá, esse texto tem    diversos        espaços completamente desnecessários. \"\n```\n:::\n\n```{.r .cell-code}\nstr_trim(texto_com_espaços, side = \"right\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"  Olá, esse texto tem    diversos        espaços completamente desnecessários.\"\n```\n:::\n\n```{.r .cell-code}\nstr_trim(texto_com_espaços, side = \"both\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Olá, esse texto tem    diversos        espaços completamente desnecessários.\"\n```\n:::\n\n```{.r .cell-code}\nstr_squish(texto_com_espaços)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Olá, esse texto tem diversos espaços completamente desnecessários.\"\n```\n:::\n:::\n\n\n## Comprimento de String\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(comprimento_nome = str_length(nome), \n         comprimento_nome_completo = str_length(Nome_Sobrenome))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome comprimento_nome comprimento_nome_completo\n1   Ana    Santos     Ana Santos                3                        10\n2 Maria     Silva    Maria Silva                5                        11\n3  João     Souza     João Souza                4                        10\n4  <NA>      <NA>           <NA>               NA                        NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(qtd_a = str_count(nome, \"a|A|ã\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome qtd_a\n1   Ana    Santos     Ana Santos     2\n2 Maria     Silva    Maria Silva     2\n3  João     Souza     João Souza     1\n4  <NA>      <NA>           <NA>    NA\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(qtd_a = str_count(nome, \"[aAã]\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome qtd_a\n1   Ana    Santos     Ana Santos     2\n2 Maria     Silva    Maria Silva     2\n3  João     Souza     João Souza     1\n4  <NA>      <NA>           <NA>    NA\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(qtd_vogais = str_count(nome, \"[aeiouAEIOUã]\")) %>% \n    mutate(qtd_consoantes = str_count(nome, \"[^aeiouAEIOUã]\")) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome qtd_vogais qtd_consoantes\n1   Ana    Santos     Ana Santos          2              1\n2 Maria     Silva    Maria Silva          3              2\n3  João     Souza     João Souza          3              1\n4  <NA>      <NA>           <NA>         NA             NA\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(qtd_vogais = str_count(nome, \"(An)\"))%>%\n  mutate(qtd_numeros = str_count(nome, \"[1-9]\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome qtd_vogais qtd_numeros\n1   Ana    Santos     Ana Santos          1           0\n2 Maria     Silva    Maria Silva          0           0\n3  João     Souza     João Souza          0           0\n4  <NA>      <NA>           <NA>         NA          NA\n```\n:::\n:::\n\n\n## Substituicao de Strings\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(nome = str_replace(nome, \"ã\", \"a\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome\n1   Ana    Santos     Ana Santos\n2 Maria     Silva    Maria Silva\n3  Joao     Souza     João Souza\n4  <NA>      <NA>           <NA>\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(nome = str_replace(nome, \"ã\", \"a\")) %>% \n  mutate(nome = str_replace_all(nome, \"a\", \"A\")) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   nome sobrenome Nome_Sobrenome\n1   AnA    Santos     Ana Santos\n2 MAriA     Silva    Maria Silva\n3  JoAo     Souza     João Souza\n4  <NA>      <NA>           <NA>\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(nome = str_replace(Nome_Sobrenome, \"ã\", \"a\")) %>% \n  mutate(nome = str_remove_all(Nome_Sobrenome, \"a\")) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       nome sobrenome Nome_Sobrenome\n1  An Sntos    Santos     Ana Santos\n2  Mri Silv     Silva    Maria Silva\n3 João Souz     Souza     João Souza\n4      <NA>      <NA>           <NA>\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  mutate(nome = str_remove_all(nome, \"[aeiouã]\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  nome sobrenome Nome_Sobrenome\n1   An    Santos     Ana Santos\n2   Mr     Silva    Maria Silva\n3    J     Souza     João Souza\n4 <NA>      <NA>           <NA>\n```\n:::\n:::\n\n\n## RegEx\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto <- \"Eu gosto de gato.\"\npadrao <- \"gato\"\n\nstr_detect(texto, padrao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto <- c(\"O rato correu para o buraco.\", \n           \"O gato correu para o buraco.\",\n           \"O mato.\")\npadrao <- \"(g|r|m)ato\"\nstr_detect(texto, padrao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE TRUE TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntexto <- c(\"Banana\", \"Ana\", \"Ananas\")\npadrao <- \"^ana\"\nstr_detect(texto, padrao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE FALSE\n```\n:::\n\n```{.r .cell-code}\npadrao <- \"(?i)^ana\"\nstr_detect(texto, padrao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE  TRUE  TRUE\n```\n:::\n\n```{.r .cell-code}\npadrao <- \"(?i)ana$\"\nstr_detect(texto, padrao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE  TRUE FALSE\n```\n:::\n\n```{.r .cell-code}\npadrao <- \"(?i)^ana$\"\nstr_detect(texto, padrao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE  TRUE FALSE\n```\n:::\n\n```{.r .cell-code}\nstr_extract(texto, \"(na)\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"na\" \"na\" \"na\"\n```\n:::\n\n```{.r .cell-code}\nstr_extract(texto, \"(na)+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"nana\" \"na\"   \"nana\"\n```\n:::\n\n```{.r .cell-code}\nstr_count(texto, \"(na){1}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 1 2\n```\n:::\n\n```{.r .cell-code}\ntexto <- \"Os números 123 e 456 são importantes.\"\npadrao <- \"\\\\d{3}\"\nnumeros <- str_extract_all(texto, \n                           padrao, \n                           simplify = TRUE)\n\nclass(numeros)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"matrix\" \"array\" \n```\n:::\n\n```{.r .cell-code}\nnumeros %>% \n  as.numeric()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 123 456\n```\n:::\n\n```{.r .cell-code}\ntexto <- \"Os números 123 e 456 são importantes.\"\npadrao <- \"\\\\d{4}\"\nnumeros <- str_extract_all(texto, \n                           padrao, \n                           simplify = TRUE)\n\ntexto <- \"Os números 123 e 456 são importantes.\"\npadrao <- \"\\\\d{2}\"\nnumeros <- str_extract_all(texto, \n                           padrao, \n                           simplify = TRUE)\nnumeros\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2]\n[1,] \"12\" \"45\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}