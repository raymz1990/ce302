{
  "hash": "9189e4f5f4f94b7d4f4a6b02c9e3519b",
  "result": {
    "markdown": "---\nalways_allow_html: true\ntitle: \"Aula 07\"\n---\n\n\n## Data.table\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#data.frame[#linha,#coluna]\n#data.table[linha, coluna, by]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"data.table\")\n\nlibrary(data.table)\n\nmeu_datatable <- data.table(\n  nome = c(\"Deisy\", \"Maria\", \"José\"), \n  idade = c(50, 61, 30)\n)\n\nmeu_datatable\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    nome idade\n1: Deisy    50\n2: Maria    61\n3:  José    30\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n\n# Criar um data.table\nmeu_data_table <- data.table(\n  nome = c(\"Alice\", \"Bob\", \"Carol\", \"Ana\", \"João\", \"Carlos\", \"Patrícia\", \"Leonardo\"),\n  idade = c(25, 30, 28, 20, 27, 50, 60, 45),\n  salario = c(5000, 6000, 5500, 8000, 2000, 3500, 10000, 3800 ), \n  meio_de_transporte = c('onibus', 'bicicleta', 'onibus', 'carro', 'carro', 'onibus', 'onibus', 'bicicleta'))\nmeu_data_table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       nome idade salario meio_de_transporte\n1:    Alice    25    5000             onibus\n2:      Bob    30    6000          bicicleta\n3:    Carol    28    5500             onibus\n4:      Ana    20    8000              carro\n5:     João    27    2000              carro\n6:   Carlos    50    3500             onibus\n7: Patrícia    60   10000             onibus\n8: Leonardo    45    3800          bicicleta\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(meu_data_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.table\" \"data.frame\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_data_table[idade > 40]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       nome idade salario meio_de_transporte\n1:   Carlos    50    3500             onibus\n2: Patrícia    60   10000             onibus\n3: Leonardo    45    3800          bicicleta\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_data_table[idade > 40, .(nome, salario)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       nome salario\n1:   Carlos    3500\n2: Patrícia   10000\n3: Leonardo    3800\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_data_table[idade > 40, .(media_idade = mean(idade))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   media_idade\n1:    51.66667\n```\n:::\n\n```{.r .cell-code}\nmeu_data_table[salario > 4000, .(media_idade = mean(idade))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   media_idade\n1:        32.6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_data_table[ , .(media_salarial = mean(salario)), by = idade ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   idade media_salarial\n1:    25           5000\n2:    30           6000\n3:    28           5500\n4:    20           8000\n5:    27           2000\n6:    50           3500\n7:    60          10000\n8:    45           3800\n```\n:::\n\n```{.r .cell-code}\nmeu_data_table[ , .(media_idade = mean(idade)), by = meio_de_transporte ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   meio_de_transporte media_idade\n1:             onibus       40.75\n2:          bicicleta       37.50\n3:              carro       23.50\n```\n:::\n:::\n\n\n## Tible\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## install.packages(\"tidyverse\")\nrequire(tibble)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: tibble\n```\n:::\n\n```{.r .cell-code}\nrequire(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: tidyr\n```\n:::\n\n```{.r .cell-code}\nrequire(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: tidyverse\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ purrr     1.0.1\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.3     ✔ stringr   1.5.0\n✔ lubridate 1.9.3     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::between()     masks data.table::between()\n✖ dplyr::filter()      masks stats::filter()\n✖ dplyr::first()       masks data.table::first()\n✖ lubridate::hour()    masks data.table::hour()\n✖ lubridate::isoweek() masks data.table::isoweek()\n✖ dplyr::lag()         masks stats::lag()\n✖ dplyr::last()        masks data.table::last()\n✖ lubridate::mday()    masks data.table::mday()\n✖ lubridate::minute()  masks data.table::minute()\n✖ lubridate::month()   masks data.table::month()\n✖ lubridate::quarter() masks data.table::quarter()\n✖ lubridate::second()  masks data.table::second()\n✖ purrr::transpose()   masks data.table::transpose()\n✖ lubridate::wday()    masks data.table::wday()\n✖ lubridate::week()    masks data.table::week()\n✖ lubridate::yday()    masks data.table::yday()\n✖ lubridate::year()    masks data.table::year()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_tibble <- tibble(\n  nome = c(\"Alice\", \"Bob\", \"Carol\", \"Ana\", \"João\", \"Carlos\", \"Patrícia\", \"Leonardo\"),\n  idade = c(25, 30, 28, 20, 27, 50, 60, 45),\n  salario = c(5000, 6000, 5500, 8000, 2000, 3500, 10000, 3800 ), \n  `meio de transporte` = c('onibus', 'bicicleta', 'onibus', 'carro', 'carro', 'onibus', 'onibus', 'bicicleta'))\nmeu_tibble\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 4\n  nome     idade salario `meio de transporte`\n  <chr>    <dbl>   <dbl> <chr>               \n1 Alice       25    5000 onibus              \n2 Bob         30    6000 bicicleta           \n3 Carol       28    5500 onibus              \n4 Ana         20    8000 carro               \n5 João        27    2000 carro               \n6 Carlos      50    3500 onibus              \n7 Patrícia    60   10000 onibus              \n8 Leonardo    45    3800 bicicleta           \n```\n:::\n\n```{.r .cell-code}\nglimpse(meu_tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 8\nColumns: 4\n$ nome                 <chr> \"Alice\", \"Bob\", \"Carol\", \"Ana\", \"João\", \"Carlos\",…\n$ idade                <dbl> 25, 30, 28, 20, 27, 50, 60, 45\n$ salario              <dbl> 5000, 6000, 5500, 8000, 2000, 3500, 10000, 3800\n$ `meio de transporte` <chr> \"onibus\", \"bicicleta\", \"onibus\", \"carro\", \"carro\"…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_tibble =  janitor::clean_names(meu_tibble)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_tibble = mutate(meu_tibble, idade_em_meses = idade*12)\nmeu_tibble$idade_em_meses2 = meu_tibble$idade*2\nmeu_datatable$idade = meu_datatable$idade*12  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeu_tibble2 = select(meu_tibble, c(nome, idade))\nmeu_tibble2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 2\n  nome     idade\n  <chr>    <dbl>\n1 Alice       25\n2 Bob         30\n3 Carol       28\n4 Ana         20\n5 João        27\n6 Carlos      50\n7 Patrícia    60\n8 Leonardo    45\n```\n:::\n\n```{.r .cell-code}\nmeu_tibble3 = filter(meu_tibble, idade > 40)\nmeu_tibble3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 6\n  nome     idade salario meio_de_transporte idade_em_meses idade_em_meses2\n  <chr>    <dbl>   <dbl> <chr>                       <dbl>           <dbl>\n1 Carlos      50    3500 onibus                        600             100\n2 Patrícia    60   10000 onibus                        720             120\n3 Leonardo    45    3800 bicicleta                     540              90\n```\n:::\n\n```{.r .cell-code}\narrange(meu_tibble3, idade)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 6\n  nome     idade salario meio_de_transporte idade_em_meses idade_em_meses2\n  <chr>    <dbl>   <dbl> <chr>                       <dbl>           <dbl>\n1 Leonardo    45    3800 bicicleta                     540              90\n2 Carlos      50    3500 onibus                        600             100\n3 Patrícia    60   10000 onibus                        720             120\n```\n:::\n\n```{.r .cell-code}\n###\nagregado_meio_transporte = group_by(meu_tibble, \n                                    meio_de_transporte)\n\nsummarise(agregado_meio_transporte, media_idade = mean(idade), \n          n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  meio_de_transporte media_idade     n\n  <chr>                    <dbl> <int>\n1 bicicleta                 37.5     2\n2 carro                     23.5     2\n3 onibus                    40.8     4\n```\n:::\n:::\n\n\n## Pipes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = sample(1:10, 5, replace = TRUE)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8 3 4 4 6\n```\n:::\n\n```{.r .cell-code}\nsort(cos(unique(x)), decreasing = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  0.9601703 -0.1455000 -0.6536436 -0.9899925\n```\n:::\n\n```{.r .cell-code}\nsort(\n  cos(\n    unique(x)\n  ),\n  decreasing = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  0.9601703 -0.1455000 -0.6536436 -0.9899925\n```\n:::\n\n```{.r .cell-code}\nrequire(magrittr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: magrittr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'magrittr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    set_names\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n:::\n\n```{.r .cell-code}\nx %>%\n  unique() %>% \n  cos() %>% \n  sort(., decreasing = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  0.9601703 -0.1455000 -0.6536436 -0.9899925\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx %>% \n  add(10) %>% \n  divide_by(2) %>% \n  subtract(8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1.0 -1.5 -1.0 -1.0  0.0\n```\n:::\n\n```{.r .cell-code}\ny = sample(1:10, size = 15, replace = TRUE)\ny = y + 20\ny %<>% add(20) \n```\n:::\n\n\n## Lendo banco e manipulando dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_crash = fread(\"data/Brazil Total highway crashes 2010 - 2023.csv.gz\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in (if (.Platform$OS.type == \"unix\") system else shell)(paste0(\"(\", :\nexecução de '(data/Brazil Total highway crashes 2010 - 2023.csv.gz) >\nC:\\Users\\CONVID~1\\AppData\\Local\\Temp\\RtmpodrVSa\\file3214c5c7cec' falhou com\ncódigo de erro 1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in fread(\"data/Brazil Total highway crashes 2010 - 2023.csv.gz\"): File\n'C:\\Users\\CONVID~1\\AppData\\Local\\Temp\\RtmpodrVSa\\file3214c5c7cec' has size 0.\nReturning a NULL data.table.\n```\n:::\n\n```{.r .cell-code}\nglimpse(car_crash)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 0\nColumns: 0\n```\n:::\n:::\n\n\n## Seleção de variáveis\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_crash %>% \n  select(caminhao, automovel, bicicleta)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `select()`:\n! Can't subset columns that don't exist.\n✖ Column `caminhao` doesn't exist.\n```\n:::\n\n```{.r .cell-code}\ncar_crash %>% \n  select(ends_with(\"feridos\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n\n```{.r .cell-code}\ncar_crash %>% \n  select(starts_with(\"tipo\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n\n```{.r .cell-code}\ncar_crash %>% \n  select(contains(\"_de_\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n\n```{.r .cell-code}\ncar_crash %>% \n  select(where(is.numeric))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n\n```{.r .cell-code}\ncar_crash %>% \n  select(where(is.character))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n\n```{.r .cell-code}\ncar_crash %>% \n  select(where(is.logical))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx = c(\"sentido\", \"trator\")\n\ncar_crash %>% \n  select(all_of(x))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `all_of()`:\n! Can't subset columns that don't exist.\n✖ Columns `sentido` and `trator` don't exist.\n```\n:::\n\n```{.r .cell-code}\nx = c(\"sentido\", \"trator\")\n\ncar_crash %>% \n  select(any_of(x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNull data.table (0 rows and 0 cols)\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}