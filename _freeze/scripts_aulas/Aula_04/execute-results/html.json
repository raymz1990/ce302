{
  "hash": "c573b9f0edeb5dd121c25c90842f2284",
  "result": {
    "markdown": "---\nalways_allow_html: true\ntitle: \"Aula 04\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nx = c(1, 2, 3, 4)\ny = c(1.2, 1.5, 2.6)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4\n```\n:::\n\n```{.r .cell-code}\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.2 1.5 2.6\n```\n:::\n\n```{.r .cell-code}\nz = c(\"carro\", \"caminhão\", \"bicicleta\")\nz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"carro\"     \"caminhão\"  \"bicicleta\"\n```\n:::\n\n```{.r .cell-code}\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n\n```{.r .cell-code}\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n\n```{.r .cell-code}\nclass(z)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nw = c(x, z)\nw\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1\"         \"2\"         \"3\"         \"4\"         \"carro\"     \"caminhão\" \n[7] \"bicicleta\"\n```\n:::\n\n```{.r .cell-code}\nclass(w)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nx + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 4 5 6\n```\n:::\n\n```{.r .cell-code}\nx + y\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in x + y: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.2 3.5 5.6 5.2\n```\n:::\n\n```{.r .cell-code}\nlength(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n\n```{.r .cell-code}\nlength(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n\n```{.r .cell-code}\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.2 1.5 2.6\n```\n:::\n\n```{.r .cell-code}\nc(1.2, 1.5, 2.6, 1.2) + x\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.2 3.5 5.6 5.2\n```\n:::\n\n```{.r .cell-code}\nx + y\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in x + y: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.2 3.5 5.6 5.2\n```\n:::\n\n```{.r .cell-code}\nidades = c(12, 14, 15, 18, 20, 30)\nidades\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12 14 15 18 20 30\n```\n:::\n\n```{.r .cell-code}\nidades > 18\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE FALSE FALSE  TRUE  TRUE\n```\n:::\n\n```{.r .cell-code}\nidades[idades > 18]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20 30\n```\n:::\n\n```{.r .cell-code}\n## Operadores lógicos \n## & (AND)\n## | (OR)\nidades[idades > 18 & idades < 30]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n\n```{.r .cell-code}\nidades[idades < 18 | idades > 20]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12 14 15 30\n```\n:::\n\n```{.r .cell-code}\nidades < 18 | idades > 20\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE  TRUE  TRUE FALSE FALSE  TRUE\n```\n:::\n\n```{.r .cell-code}\nidades[(idades < 18 | idades > 20) | (idades == 15)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12 14 15 30\n```\n:::\n\n```{.r .cell-code}\n## Informaçoes faltantes\nNA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nmean(c(1,2,3, NA), na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\nmin(c(1,2,NA), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nNaN # Not a Number\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NaN\n```\n:::\n\n```{.r .cell-code}\n0/0\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NaN\n```\n:::\n\n```{.r .cell-code}\nsqrt(-1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in sqrt(-1): NaNs produzidos\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NaN\n```\n:::\n\n```{.r .cell-code}\ny = c(1:10, NA, NA)\nsum(is.na(y))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\nna.omit(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\nattr(,\"na.action\")\n[1] 11 12\nattr(,\"class\")\n[1] \"omit\"\n```\n:::\n\n```{.r .cell-code}\nna.exclude(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\nattr(,\"na.action\")\n[1] 11 12\nattr(,\"class\")\n[1] \"exclude\"\n```\n:::\n\n```{.r .cell-code}\ny[is.na(y)] <- 0 \ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10  0  0\n```\n:::\n\n```{.r .cell-code}\nnames(idades)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n\n```{.r .cell-code}\nlength(idades)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\nnames(idades) <- c(\"Ana\", \"Maria\", \n                   \"João\", \"Pedro\", \n                   \"Leo\", \"Andressa\")\nnames(idades)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ana\"      \"Maria\"    \"João\"     \"Pedro\"    \"Leo\"      \"Andressa\"\n```\n:::\n\n```{.r .cell-code}\nidades\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Ana    Maria     João    Pedro      Leo Andressa \n      12       14       15       18       20       30 \n```\n:::\n\n```{.r .cell-code}\nidades[\"Ana\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAna \n 12 \n```\n:::\n\n```{.r .cell-code}\nidades[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAna \n 12 \n```\n:::\n\n```{.r .cell-code}\nidades[c(\"Ana\", \"João\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Ana João \n  12   15 \n```\n:::\n\n```{.r .cell-code}\n## Matrizes\n\nvetor_a = c(1:10)\nvetor_b = c(21:30)\n\nmatriz_a = cbind(vetor_a, vetor_b)\nmatriz_b = rbind(vetor_a, vetor_b)\nclass(matriz_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"matrix\" \"array\" \n```\n:::\n\n```{.r .cell-code}\nclass(matriz_b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"matrix\" \"array\" \n```\n:::\n\n```{.r .cell-code}\nmatriz_c = matrix(c(1:9), \n       ncol = 3, \n       byrow = TRUE)\nmatriz_c\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n```\n:::\n\n```{.r .cell-code}\nmatriz_d = matrix(c(1:9), \n                  ncol = 3, \n                  byrow = FALSE)\nmatriz_d\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n```\n:::\n\n```{.r .cell-code}\nclass(matriz_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"matrix\" \"array\" \n```\n:::\n\n```{.r .cell-code}\ndim(matriz_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10  2\n```\n:::\n\n```{.r .cell-code}\ndim(matriz_b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  2 10\n```\n:::\n\n```{.r .cell-code}\nlength(matriz_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n\n```{.r .cell-code}\ndim(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 3\n```\n:::\n\n```{.r .cell-code}\nmatriz_d[2,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[1,3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n\n```{.r .cell-code}\nmatriz_d[,3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7 8 9\n```\n:::\n\n```{.r .cell-code}\nmatriz_b[1,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n```{.r .cell-code}\n######\nwhich(matriz_c > 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 6 8 9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[which(matriz_c > 5)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7 8 6 9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[which(matriz_c %% 2 != 0)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 7 5 3 9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[which(matriz_c %% 2 != 0)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 7 5 3 9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[which(matriz_c %% 2 == 0)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4 2 8 6\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[,1][which(matriz_c[,1] %% 2 == 0)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[1, which(matriz_c[1, ] %% 2 == 0)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[-2, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    7    8    9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[, -2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2]\n[1,]    1    3\n[2,]    4    6\n[3,]    7    9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[-1, -2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2]\n[1,]    4    6\n[2,]    7    9\n```\n:::\n\n```{.r .cell-code}\ndim(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 3\n```\n:::\n\n```{.r .cell-code}\ndim(matriz_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 3\n```\n:::\n\n```{.r .cell-code}\nmatriz_c + matriz_d\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    2    6   10\n[2,]    6   10   14\n[3,]   10   14   18\n```\n:::\n\n```{.r .cell-code}\nmatriz_c - matriz_d\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    0   -2   -4\n[2,]    2    0   -2\n[3,]    4    2    0\n```\n:::\n\n```{.r .cell-code}\nrowSums(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  6 15 24\n```\n:::\n\n```{.r .cell-code}\ncolSums(matriz_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  6 15 24\n```\n:::\n\n```{.r .cell-code}\ncolMeans(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4 5 6\n```\n:::\n\n```{.r .cell-code}\nrowMeans(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 5 8\n```\n:::\n\n```{.r .cell-code}\nmatriz_c * 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    5   10   15\n[2,]   20   25   30\n[3,]   35   40   45\n```\n:::\n\n```{.r .cell-code}\nmatriz_c ^ 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    4    9\n[2,]   16   25   36\n[3,]   49   64   81\n```\n:::\n\n```{.r .cell-code}\nmatriz_c * matriz_d\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    8   21\n[2,]    8   25   48\n[3,]   21   48   81\n```\n:::\n\n```{.r .cell-code}\nmatriz_c %*% matriz_d\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]   14   32   50\n[2,]   32   77  122\n[3,]   50  122  194\n```\n:::\n\n```{.r .cell-code}\nt(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n```\n:::\n\n```{.r .cell-code}\ndet(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6.661338e-16\n```\n:::\n\n```{.r .cell-code}\nX = matrix(c(1,20,30, \n             20, 40, -60, \n             10, 6, 5 ), \n           ncol = 3, byrow = T)\nsolve(X)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            [,1]         [,2]        [,3]\n[1,] -0.02564103 -0.003663004  0.10989011\n[2,]  0.03205128  0.013507326 -0.03021978\n[3,]  0.01282051 -0.008882784  0.01648352\n```\n:::\n\n```{.r .cell-code}\ndet(X)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -21840\n```\n:::\n\n```{.r .cell-code}\nX[diag(X)] <- 0\nX\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]   0  20  10  20   0   6  30 -60   5  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n[20]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n[39]  NA   0\n```\n:::\n\n```{.r .cell-code}\neigen(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\neigen() decomposition\n$values\n[1]  1.611684e+01 -1.116844e+00 -1.303678e-15\n\n$vectors\n           [,1]        [,2]       [,3]\n[1,] -0.2319707 -0.78583024  0.4082483\n[2,] -0.5253221 -0.08675134 -0.8164966\n[3,] -0.8186735  0.61232756  0.4082483\n```\n:::\n\n```{.r .cell-code}\n# A^T B\n\ncrossprod(matriz_c, matriz_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]   30   66  102\n[2,]   36   81  126\n[3,]   42   96  150\n```\n:::\n\n```{.r .cell-code}\n# A B^T\ntcrossprod(matriz_c, matriz_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]   30   36   42\n[2,]   66   81   96\n[3,]  102  126  150\n```\n:::\n\n```{.r .cell-code}\n### Produto vetorial\nmatriz_c * c(1,2,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    8   10   12\n[3,]   21   24   27\n```\n:::\n\n```{.r .cell-code}\nrownames(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n\n```{.r .cell-code}\nrownames(matriz_c) <- c(\"a\", \"b\", \"c\")\nmatriz_c\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [,1] [,2] [,3]\na    1    2    3\nb    4    5    6\nc    7    8    9\n```\n:::\n\n```{.r .cell-code}\ncolnames(matriz_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n\n```{.r .cell-code}\ncolnames(matriz_c) <- c(\"x\", \"y\", \"z\")\nmatriz_c\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x y z\na 1 2 3\nb 4 5 6\nc 7 8 9\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[\"a\",]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nx y z \n1 2 3 \n```\n:::\n\n```{.r .cell-code}\nmatriz_c[, \"z\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\na b c \n3 6 9 \n```\n:::\n\n```{.r .cell-code}\nmatriz_c[\"a\", \"z\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n\n```{.r .cell-code}\nmatriz_upper <- matriz_c\nmatriz_upper[upper.tri(matriz_upper, diag = T)] <- 99\nmatriz_upper\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   x  y  z\na 99 99 99\nb  4 99 99\nc  7  8 99\n```\n:::\n\n```{.r .cell-code}\nmatriz_c[lower.tri(matriz_c, diag = T)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 4 7 5 8 9\n```\n:::\n\n```{.r .cell-code}\n## Array\n# Criando um array 2x3x4\narr <- array(1:24, dim = c(2, 3, 4))\narr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    7    9   11\n[2,]    8   10   12\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   13   15   17\n[2,]   14   16   18\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]   19   21   23\n[2,]   20   22   24\n```\n:::\n\n```{.r .cell-code}\narr[1,1,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\narr[1,1,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1  7 13 19\n```\n:::\n\n```{.r .cell-code}\narr[,,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}